@import url("https://fonts.googleapis.com/css2?family=PT+Serif:wght@400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap");

/* * || UNIVERSAL SETTERS */

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

/* * || VARIABLES */

:root {
	/* COLOURS */

	--FONT-COLOR: #000;
	--MAX-WIDTH-DESKTOP: 925px;
}

.header {
	max-width: var(--MAX-WIDTH-DESKTOP);
	font-family: "PT Serif", serif;
	font-weight: 700;
	padding: 6rem 0;
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 10rem;
	color: var(--FONT-COLOR);
	width: 100%;
}

.title {
	position: relative;
}

.about-us {
	font-family: "Poppins", sans-serif;
	width: 437px;
	height: 87px;
	color: var(--FONT-COLOR);
}

.about-us h1 {
	font-weight: 600;
	font-size: 18px;
	padding-bottom: 1rem;
}

.about-us p {
	font-weight: 400;
	font-size: 18px;
}

.gallery {
	display: flex;
	align-items: center;
	flex-direction: column; /* I'm not understanding why this center the flex */
}

.crew {
	align-items: center;
	max-width: var(--MAX-WIDTH-DESKTOP);
	margin: 4rem 0;
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	gap: 2rem;
	flex-direction: row;
	position: relative;
}

.crew-member {
	display: flex;
	flex-direction: column;
	position: relative;
	margin: 8rem 0;
	height: 300px;
	width: 240px;
}

img {
	padding-bottom: 1rem;
	width: 240px;
	height: 350px;
	align-self: center;
}

.crew-member h1 {
	font-family: "Poppins", sans-serif;
	font-size: 18px;
	font-weight: 600;
	position: relative;
}

.crew-member h2 {
	min-width: 110px;
	font-family: "PT serif", sans-serif;
	font-size: 12px;
	font-weight: 400;
	text-transform: uppercase;
	position: absolute;
	transform: rotate(90deg);
	transform-origin: 0 0;
	right: -130px;
}

footer {
	margin-top: 7rem;
	padding: 1rem 0;
	font-family: "Montserrat", sans-serif;
	color: #bdbdbd;
	position: relative;
	bottom: 0;
	width: 100%;
	display: inline-flex;
	justify-content: center;
}

.name {
	text-decoration: underline;
	font-weight: 600;
}

/* * || LINK STYLING */

.name,
a {
	color: #bdbdbd;
}
.name,
a:visited {
	color: purple;
}
.name,
a:hover {
	color: #333333;
	transition: color 0.3s ease-in-out 0s;
}
.name,
a:active {
	color: #b17d22;
	transition: color 0.3s ease-in-out 0s;
}

/* * || MEDIA QUERIES */

@media screen and (max-width: 629px) {
	.crew {
		max-width: 600px;
	}

	.crew-member {
		width: 130px;
		height: 190px;
		margin: 0;
	}

	img {
		width: 100%;
		height: auto;
	}

	.header {
		padding-bottom: 0;
	}

	.about-us {
		width: 100%;
	}

	.about-us h1 {
		font-size: 16px;
	}

	.about-us p {
		font-size: 12px;
		word-wrap: break-word;
	}

	footer {
		font-size: 12px;
	}
}

@media screen and (max-width: 926px) {
	.header {
		flex-direction: column;
		gap: 2rem;
		align-items: flex-start;
		margin-left: 4rem;
	}

	.crew {
		margin-left: 2rem;
	}

	.crew-member {
		margin: 8rem 2rem 8rem 0;
	}

	.crew-member:nth-child(2),
	.crew-member:nth-child(4),
	.crew-member:nth-child(6) {
		margin-bottom: auto;
	}
	.crew-member:nth-child(1),
	.crew-member:nth-child(3),
	.crew-member:nth-child(5) {
		margin-top: auto;
	}
}

@media screen and (min-width: 927px) {
	.crew-member:nth-child(2),
	.crew-member:nth-child(5) {
		margin-bottom: auto;
	}
	.crew-member:nth-child(1),
	.crew-member:nth-child(3),
	.crew-member:nth-child(4),
	.crew-member:nth-child(6) {
		margin-top: auto;
	}
}

/* ! || NOTES

   ! Flexbox is really useful, I need to understand it better.
  
	* Rotating was painful, what I need to do to achieve a clean rotation so far is:

	- 1st: Set the parent element to position: relative.
	- 2nd: Thanks to the first step, I can now set the child element to position: absolute. with this, the child element will stablish itself at the start of the parent element.
	- 3rd: Set the child element to transform: rotate(90deg)
	- 4th: But that's not enough, when you rotate an element normally it breaks the layout flow, so the key to this rotation is to set the transform-origin to 0 0, this will make the rotation start at the top left corner of the element. 

	! Something I think I learned is that is maybe advisable to always use a container for each element or set of elements.
*/
